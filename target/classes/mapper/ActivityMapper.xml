<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.baoshichain.guessgame.dao.ActivityDao">
    <resultMap id="BaseResultMap" type="org.baoshichain.guessgame.entity.Activity">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="userid" property="userid" jdbcType="INTEGER"/>
        <result column="activityname" property="activityname" jdbcType="VARCHAR"/>
        <result column="describe" property="describe" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="flag" property="flag" jdbcType="INTEGER"/>
        <result column="startBlock" property="startblock" jdbcType="VARCHAR"/>
        <result column="endBlock" property="endblock" jdbcType="VARCHAR"/>
        <result column="token" property="token" jdbcType="VARCHAR"/>
        <result column="limitMax" property="limitmax" jdbcType="VARCHAR"/>
        <result column="limitMin" property="limitmin" jdbcType="VARCHAR"/>
        <result column="winrate" property="winrate" jdbcType="VARCHAR"/>
        <result column="numMax" property="nummax" jdbcType="VARCHAR"/>
        <result column="num" property="num" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, userid, activityname,`describe`, `type`, flag, startBlock, endBlock, token, limitMax,
    limitMin, winrate, numMax, num
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tb_activity
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_activity
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.baoshichain.guessgame.entity.Activity" useGeneratedKeys="true" >

 insert into tb_activity (id, userid, activityname,
    `describe`, `type`, flag,
    startBlock, endBlock, token,
    limitMax, limitMin, winrate,
    numMax, num)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{activityname,jdbcType=VARCHAR}, 
      #{describe,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER},
      #{startblock,jdbcType=VARCHAR}, #{endblock,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR},
      #{limitmax,jdbcType=VARCHAR}, #{limitmin,jdbcType=VARCHAR}, #{winrate,jdbcType=VARCHAR}, 
      #{nummax,jdbcType=VARCHAR}, #{num,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="org.baoshichain.guessgame.entity.Activity">
        insert into tb_activity
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userid != null">
                userid,
            </if>
            <if test="activityname != null">
                activityname,
            </if>
            <if test="describe != null">
               `describe`,
            </if>
            <if test="type != null">
                 `type`,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="startblock != null">
                startBlock,
            </if>
            <if test="endblock != null">
                endBlock,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="limitmax != null">
                limitMax,
            </if>
            <if test="limitmin != null">
                limitMin,
            </if>
            <if test="winrate != null">
                winrate,
            </if>
            <if test="nummax != null">
                numMax,
            </if>
            <if test="num != null">
                num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="activityname != null">
                #{activityname,jdbcType=VARCHAR},
            </if>
            <if test="describe != null">
                #{describe,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=INTEGER},
            </if>
            <if test="startblock != null">
                #{startblock,jdbcType=VARCHAR},
            </if>
            <if test="endblock != null">
                #{endblock,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                #{token,jdbcType=VARCHAR},
            </if>
            <if test="limitmax != null">
                #{limitmax,jdbcType=VARCHAR},
            </if>
            <if test="limitmin != null">
                #{limitmin,jdbcType=VARCHAR},
            </if>
            <if test="winrate != null">
                #{winrate,jdbcType=VARCHAR},
            </if>
            <if test="nummax != null">
                #{nummax,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                #{num,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.baoshichain.guessgame.entity.Activity">
        update tb_activity
        <set>
            <if test="userid != null">
                userid = #{userid,jdbcType=INTEGER},
            </if>
            <if test="activityname != null">
                activityname = #{activityname,jdbcType=VARCHAR},
            </if>
            <if test="describe != null">
                `describe` = #{describe,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=INTEGER},
            </if>
            <if test="startblock != null">
                startBlock = #{startblock,jdbcType=VARCHAR},
            </if>
            <if test="endblock != null">
                endBlock = #{endblock,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="limitmax != null">
                limitMax = #{limitmax,jdbcType=VARCHAR},
            </if>
            <if test="limitmin != null">
                limitMin = #{limitmin,jdbcType=VARCHAR},
            </if>
            <if test="winrate != null">
                winrate = #{winrate,jdbcType=VARCHAR},
            </if>
            <if test="nummax != null">
                numMax = #{nummax,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.baoshichain.guessgame.entity.Activity">
    update tb_activity
    set userid = #{userid,jdbcType=INTEGER},
      activityname = #{activityname,jdbcType=VARCHAR},
      `describe` = #{describe,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      startBlock = #{startblock,jdbcType=VARCHAR},
      endBlock = #{endblock,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      limitMax = #{limitmax,jdbcType=VARCHAR},
      limitMin = #{limitmin,jdbcType=VARCHAR},
      winrate = #{winrate,jdbcType=VARCHAR},
      numMax = #{nummax,jdbcType=VARCHAR},
      num = #{num,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!-- &lt;!&ndash; 查询useriD 对应activity列表&ndash;&gt;
     <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
       select
       <include refid="Base_Column_List" />
       from tb_activity
       where userid = #{userid,jdbcType=INTEGER} and flag = '1'
     </select>

     &lt;!&ndash; 查询useriD 对应activity列表&ndash;&gt;
     <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
       select
       <include refid="Base_Column_List" />
       from tb_activity
       where userid = #{userid,jdbcType=INTEGER} and flag = '1'
     </select>-->

    <select id="getActivityList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from tb_activity where `type` = 2 and endBlock > NOW()
    </select>

    <select id="getList" resultType="java.lang.Integer">
    SELECT SUM(price) from tb_activityofcard a,tb_card b
        where a.cardid = b.id and activityid =#{activityId,jdbcType=INTEGER}
  </select>

    <select id="getActivityinfo" resultMap="BaseResultMap">
    SELECT * from tb_activity
    where id =#{id,jdbcType=INTEGER}
  </select>


    <update id="updateCardNum" parameterType="java.lang.Integer">
  update tb_activity set num=num-1  WHERE id= #{id,jdbcType=INTEGER}
  </update>

    <select id="getActivityNum" resultType="java.lang.Integer">
        SELECT COUNT(id) from tb_activity
        where userid =#{userid,jdbcType=INTEGER}
    </select>


    <select id="getUserOfActivity" resultType="java.util.Map">
       select DISTINCT a.userid,b.id,b.activityname,b.endBlock,b.startBlock
          from tb_userofactivity a, tb_activity b where a.activityid=b.id AND a.userid=#{userid,jdbcType=INTEGER}
    </select>
    
      <!--查询所有的开奖房间-->
  <select id="selectAllLotteryActivity" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_activity
    where `type` = 1
  </select>

  <!--selectAllLotteryActivityInfo-->
  <!--查询所有开奖房间的信息，包括卡片信息，参与人数-->
  <select id="selectAllLotteryActivityInfo" resultType="java.util.HashMap" >
    SELECT tb_activity.id,tb_activity.activityname,tb_activity.startBlock,tb_activity.`describe`,tb_activity.endBlock,tb_card.price,count(tb_userofactivity.userid) as membernum
    FROM tb_activity LEFT JOIN tb_userofactivity
    ON tb_activity.id = tb_userofactivity.activityid
    LEFT JOIN tb_activityofcard
    ON tb_activity.id = tb_activityofcard.activityid
    LEFT JOIN tb_card
    ON tb_activityofcard.cardid = tb_card.id
    GROUP BY tb_activity.id
  </select>

  <!--selectLotteryActivityInfoByActivityId-->
  <!--查询单个房间的详细信息-->
  <select id="selectLotteryActivityDetailByActivityId" resultType="java.util.HashMap" parameterType="java.lang.String">
    SELECT tb_activity.id,tb_activity.activityname,tb_activity.startBlock,tb_activity.`describe`,tb_activity.endBlock,tb_card.price,count(tb_userofactivity.userid) as membernum
    FROM tb_activity LEFT JOIN tb_userofactivity
    ON tb_activity.id = tb_userofactivity.activityid
    LEFT JOIN tb_activityofcard
    ON tb_activity.id = tb_activityofcard.activityid
    LEFT JOIN tb_card
    ON tb_activityofcard.cardid = tb_card.id
    Where tb_activity.id= #{id,jdbcType=VARCHAR}
  </select>
</mapper>