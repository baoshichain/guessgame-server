<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.baoshichain.guessgame.dao.UserOfActivityDao" >
  <resultMap id="BaseResultMap" type="org.baoshichain.guessgame.entity.UserOfActivity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="activityid" property="activityid" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userid, activityid, flag,`time`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="INTEGER" >
    select 
    <include refid="Base_Column_List" />
    from tb_userofactivity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_userofactivity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.baoshichain.guessgame.entity.UserOfActivity" >
    insert into tb_userofactivity (id, userid, activityid, 
      flag,`time`)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{activityid,jdbcType=INTEGER}, 
      #{flag,jdbcType=VARCHAR},#{time,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.baoshichain.guessgame.entity.UserOfActivity" >
    insert into tb_userofactivity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="activityid != null" >
        activityid,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="time != null" >
        `time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="activityid != null" >
        #{activityid,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.baoshichain.guessgame.entity.UserOfActivity" >
    update tb_userofactivity
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="activityid != null" >
        activityid = #{activityid,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        `time`= #{time,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.baoshichain.guessgame.entity.UserOfActivity" >
    update tb_userofactivity
    set userid = #{userid,jdbcType=INTEGER},
      activityid = #{activityid,jdbcType=INTEGER},
      flag = #{flag,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertUser" parameterType="org.baoshichain.guessgame.entity.UserOfActivity" >
     insert into tb_userofactivity (id, userid, activityid,flag,`time`)values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{activityid,jdbcType=INTEGER},
      #{flag,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR})
  </insert>

  <!-- 查询当前房间参与人,参与次数-->
  <select id="getJoinNum"  resultMap="BaseResultMap">
          select userid,activityid,`time` from tb_userofactivity where activityid = #{0} AND userid = #{1}
  </select>

  <!-- 查询当前房间参与人-->
  <select id="getJoinUserNum"  resultMap="BaseResultMap">
      select DISTINCT userid,activityid from tb_userofactivity where activityid = #{0}
  </select>

  <!--通过activity查询信息-->
  <select id="selectByActivityId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_userofactivity
    where activityId = #{id,jdbcType=INTEGER}
  </select>


  <!--查询这个人是否已经参加过活动-->
  <select id="selectUserActivityCountByActivityIdAndUserId" resultType="java.lang.Integer">
    select count(*) from tb_userofactivity where userid=#{0} and activityid=#{1}
  </select>

  <select id="selectUserActivityCountByActivityId" resultType="java.lang.Integer">
    select count(*) from tb_userofactivity where activityid=#{0}
  </select>

  <select id="getRewardUserId" resultType="java.lang.Integer">
    select userid from tb_userofactivity where activityid=#{0} limit #{1},1
  </select>



</mapper>